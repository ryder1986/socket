Backport of:

From 4577adead6a7d600c8e764619d99477a08192c8f Mon Sep 17 00:00:00 2001
From: "djm@openbsd.org" <djm@openbsd.org>
Date: Wed, 28 Sep 2016 20:32:42 +0000
Subject: [PATCH] upstream commit

restore pre-auth compression support in the client -- the
previous commit was intended to remove it from the server only.

remove a few server-side pre-auth compression bits that escaped

adjust wording of Compression directive in sshd_config(5)

pointed out by naddy@ ok markus@

Upstream-ID: d23696ed72a228dacd4839dd9f2dec424ba2016b
---
 kex.c         |  4 +---
 kex.h         |  5 ++---
 packet.c      |  7 +++----
 servconf.c    |  4 ++--
 sshconnect2.c |  4 ++--
 sshd_config.5 | 12 +++++++-----
 6 files changed, 17 insertions(+), 19 deletions(-)

Index: openssh-7.2p2/kex.c
===================================================================
--- openssh-7.2p2.orig/kex.c	2018-01-15 09:45:36.003142056 -0500
+++ openssh-7.2p2/kex.c	2018-01-15 09:45:36.003142056 -0500
@@ -687,8 +687,6 @@ choose_comp(struct sshcomp *comp, char *
 		return SSH_ERR_NO_COMPRESS_ALG_MATCH;
 	if (strcmp(name, "zlib@openssh.com") == 0) {
 		comp->type = COMP_DELAYED;
-	} else if (strcmp(name, "zlib") == 0) {
-		comp->type = COMP_ZLIB;
 	} else if (strcmp(name, "none") == 0) {
 		comp->type = COMP_NONE;
 	} else {
Index: openssh-7.2p2/kex.h
===================================================================
--- openssh-7.2p2.orig/kex.h	2018-01-15 09:45:36.003142056 -0500
+++ openssh-7.2p2/kex.h	2018-01-15 09:45:36.003142056 -0500
@@ -60,8 +60,7 @@
 #define	KEX_CURVE25519_SHA256	"curve25519-sha256@libssh.org"
 
 #define COMP_NONE	0
-#define COMP_ZLIB	1
-#define COMP_DELAYED	2
+#define COMP_DELAYED	1
 
 #define CURVE25519_SIZE 32
 
Index: openssh-7.2p2/packet.c
===================================================================
--- openssh-7.2p2.orig/packet.c	2018-01-15 09:45:36.003142056 -0500
+++ openssh-7.2p2/packet.c	2018-01-15 09:45:36.003142056 -0500
@@ -928,9 +928,8 @@ ssh_set_newkeys(struct ssh *ssh, int mod
 	/* explicit_bzero(enc->iv,  enc->block_size);
 	   explicit_bzero(enc->key, enc->key_len);
 	   explicit_bzero(mac->key, mac->key_len); */
-	if ((comp->type == COMP_ZLIB ||
-	    (comp->type == COMP_DELAYED &&
-	     state->after_authentication)) && comp->enabled == 0) {
+	if (comp->type == COMP_DELAYED && state->after_authentication &&
+	    comp->enabled == 0) {
 		if ((r = ssh_packet_init_compression(ssh)) < 0)
 			return r;
 		if (mode == MODE_OUT) {
Index: openssh-7.2p2/servconf.c
===================================================================
--- openssh-7.2p2.orig/servconf.c	2018-01-15 09:45:36.003142056 -0500
+++ openssh-7.2p2/servconf.c	2018-01-15 09:45:36.003142056 -0500
@@ -955,8 +955,8 @@ static const struct multistate multistat
 	{ NULL, -1 }
 };
 static const struct multistate multistate_compression[] = {
-	{ "delayed",			COMP_DELAYED },
 	{ "yes",			COMP_DELAYED },
+	{ "delayed",			COMP_DELAYED },
 	{ "no",				COMP_NONE },
 	{ NULL, -1 }
 };
Index: openssh-7.2p2/sshconnect2.c
===================================================================
--- openssh-7.2p2.orig/sshconnect2.c	2018-01-15 09:45:36.003142056 -0500
+++ openssh-7.2p2/sshconnect2.c	2018-01-15 09:46:28.031192929 -0500
@@ -178,10 +178,10 @@ ssh_kex2(char *host, struct sockaddr *ho
 	    compat_cipher_proposal(options.ciphers);
 	if (options.compression) {
 		myproposal[PROPOSAL_COMP_ALGS_CTOS] =
-		myproposal[PROPOSAL_COMP_ALGS_STOC] = "zlib@openssh.com,none";
+		myproposal[PROPOSAL_COMP_ALGS_STOC] = "zlib@openssh.com,zlib,none";
 	} else {
 		myproposal[PROPOSAL_COMP_ALGS_CTOS] =
-		myproposal[PROPOSAL_COMP_ALGS_STOC] = "none,zlib@openssh.com";
+		myproposal[PROPOSAL_COMP_ALGS_STOC] = "none,zlib@openssh.com,zlib";
 	}
 	myproposal[PROPOSAL_MAC_ALGS_CTOS] =
 	    myproposal[PROPOSAL_MAC_ALGS_STOC] = options.macs;
Index: openssh-7.2p2/sshd_config.5
===================================================================
--- openssh-7.2p2.orig/sshd_config.5	2018-01-15 09:45:36.003142056 -0500
+++ openssh-7.2p2/sshd_config.5	2018-01-15 09:47:17.911241499 -0500
@@ -549,15 +549,17 @@ channel to request a response from the c
 The default
 is 0, indicating that these messages will not be sent to the client.
 .It Cm Compression
-Specifies whether compression is allowed, or delayed until
+Specifies whether compression is enabled after
 the user has authenticated successfully.
 The argument must be
 .Dq yes ,
-.Dq delayed ,
+.Dq delayed
+(a legacy synonym for
+.Dq yes )
 or
 .Dq no .
 The default is
-.Dq delayed .
+.Dq yes .
 .It Cm DebianBanner
 Specifies whether the distribution-specified extra version suffix is
 included during initial protocol handshake.
